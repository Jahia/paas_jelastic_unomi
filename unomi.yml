---
type: update
version: 1.5.2
name: Jahia - Unomi
logo: /images/jahia-logo-70x70.png
id: jahia-unomi
description:
  short: Jahia - Unomi
  text: This is the Jahia Cloud package for Unomi.
    Apache Unomi is a Java Open Source customer data platform, a Java server
    designed to manage customers, leads and visitors data and help personalize
    customers experiences while also offering features to respect visitor
    privacy rules (such as GDPR).
baseUrl: https://github.com/Jahia/paas_jelastic_dx_unomi/raw/master
globals:
  datadog_key: ${settings.ddogApikey}
  shortdomain: ${settings.shortdomain}
  unomi_version: 1.3.3
  es_version: 5.6.3
  package_type: dev
  dx_version: ${settings.dxVersion}
ssl: true
skipNodeEmails: true

nodes:
  - image: jahiadev/unomi:${globals.unomi_version}-jdk-1.8.0_144
    displayName: Unomi
    count: 1
    cloudlets: 32
    nodeGroup: unomi
    links: es:es
    startServiceOnCreation: false
    env:
      UNOMI_HTTP_PORT: 80
      UNOMI_ELASTICSEARCH_ADDRESSES: es:9300
      UNOMI_ELASTICSEARCH_CLUSTERNAME: jahia-dx
      PACKAGE_TYPE: ${globals.package_type}
      UNOMI_VERSION: ${globals.unomi_version}

  - image: jahiadev/elasticsearch:${globals.es_version}-jdk-1.8.0_144
    displayName: Elastic Search
    count: 1
    cloudlets: 40
    nodeGroup: es
    env:
      PACKAGE_TYPE: ${globals.package_type}
      DX_VERSION: ${globals.dx_version}
      UNOMI_VERSION: ${globals.unomi_version}

# --Events --

onUninstall:
  cmd [${targetNodes.nodeGroup}]:
    - sed -i -e 's/.*NOPASSWD.*//g' /etc/sudoers.d/sudo
  user: root

onInstall:
  - setupUnomi
  - setupDatadogAgentUnomi: unomi
  - setupDatadogAgentEs: es


onAfterServiceScaleOut[unomi]:
  forEach(event.response.nodes):
    - setupDatadogAgentPerNodeUnomi: ${@i.id}

onBeforeServiceScaleOut[unomi]: updateHazelcast
onBeforeScaleIn[unomi]: updateHazelcast


# -- Actions --
actions:
  updateHazelcast:
    - cmd[unomi]: |-
        sed -i "/<interface>/d" $HAZELCAST_CONFIG
        sed -i "/<member>node/d" $HAZELCAST_CONFIG
        sed -i "2i export UNOMI_CLUSTER_PUBLIC_ADDRESS=https://${HOSTNAME}" /etc/init.d/karaf-service
        sed -i "2i export UNOMI_CLUSTER_INTERNAL_ADDRESS=https://${HOSTNAME}:9443" /etc/init.d/karaf-service
        sed -i "2i export UNOMI_HAZELCAST_TCPIP_MEMBERS=unomi" /etc/init.d/karaf-service

  setupUnomi:
    - updateHazelcast
    - ForEach(nodes.unomi):
        api: env.control.ExecDockerRunCmd
        nodeId: ${@i.id}

  setupDatadogAgentUnomi:
    - if (settings.mode == 'production'):
        forEach(nodes.${this}):
          cmd[${@i.id}]: |-
            DD_API_KEY=${globals.datadog_key} bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"
            echo "hostname: ${this}.${@i.id}" >> /etc/datadog-agent/datadog.yaml
            sed -i 's/# logs_enabled: false/logs_enabled: true/' /etc/datadog-agent/datadog.yaml
            echo "tags:" >> /etc/datadog-agent/datadog.yaml
            echo " - client:jahiacloud" >> /etc/datadog-agent/datadog.yaml
            echo " - env:${PACKAGE_TYPE}" >> /etc/datadog-agent/datadog.yaml
            echo " - product:unomi" >> /etc/datadog-agent/datadog.yaml
            echo " - version:${UNOMI_VERSION}" >> /etc/datadog-agent/datadog.yaml
            systemctl restart datadog-agent

  setupDatadogAgentEs:
    - if (settings.mode == 'production'):
        forEach(nodes.${this}):
          cmd[${@i.id}]: |-
            DD_API_KEY=${globals.datadog_key} bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"
            echo "hostname: ${this}.${@i.id}" >> /etc/datadog-agent/datadog.yaml
            sed -i 's/# logs_enabled: false/logs_enabled: true/' /etc/datadog-agent/datadog.yaml
            echo "tags:" >> /etc/datadog-agent/datadog.yaml
            echo " - client:jahiacloud" >> /etc/datadog-agent/datadog.yaml
            echo " - env:${PACKAGE_TYPE}" >> /etc/datadog-agent/datadog.yaml
            echo " - product:unomi" >> /etc/datadog-agent/datadog.yaml
            echo " - version:${UNOMI_VERSION}" >> /etc/datadog-agent/datadog.yaml
            wget -O /etc/datadog-agent/conf.d/elastic.d/conf.yaml ${baseUrl}/conf.yaml
            chmod 755 /var/log/elasticsearch/
            chmod 755 /var/log/elasticsearch/*.log -R
            echo "---" > /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "logs:" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "  - type: file" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    path: /var/log/elasticsearch/*.log" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    source: elasticsearch" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    service: esDatabase" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "init_config:" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "instances:" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "  - url: http://${HOSTNAME}:9200" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    cluster_stats: false" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    pshard_stats: true" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    index_stats: true" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    pending_task_stats: true" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "    tags:" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "      - 'env:${PACKAGE_TYPE}'" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            echo "      - 'role:esdatabase'" >> /etc/datadog-agent/conf.d/elastic.d/conf.yaml
            systemctl restart datadog-agent

  setupDatadogAgentPerNodeUnomi:
    - if (settings.mode == 'production'):
        - cmd[${this}]: |-
            DD_API_KEY=${globals.datadog_key} bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"
            echo "hostname: unomi.${this}" >> /etc/datadog-agent/datadog.yaml
            sed -i 's/# logs_enabled: false/logs_enabled: true/' /etc/datadog-agent/datadog.yaml
            echo "tags:" >> /etc/datadog-agent/datadog.yaml
            echo " - client:jahiacloud" >> /etc/datadog-agent/datadog.yaml
            echo " - env:${PACKAGE_TYPE}" >> /etc/datadog-agent/datadog.yaml
            echo " - product:unomi" >> /etc/datadog-agent/datadog.yaml
            echo " - version:${UNOMI_VERSION}" >> /etc/datadog-agent/datadog.yaml
            systemctl restart datadog-agent

settings:
  fields:
    - name: mode
      type: radio-fieldset
      caption: Operating Mode
      values:
        production: production
        development: development
      default: production
      showIf:
        production:
          - name: ddogApikey
            type: string
            caption: Datadog API KEY
            required: true
            vtype: text
