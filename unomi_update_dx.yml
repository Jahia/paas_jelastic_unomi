---
type: update
version: 1.5.2
name: Jahia - Unomi Update DX
logo: /images/jahia-logo-70x70.png
id: jahia-unomi-update-dx
description:
  short: Jahia - Unomi Update DX
  text: This is the Jahia Cloud package for Unomi.
    Apache Unomi is a Java Open Source customer data platform, a Java server
    designed to manage customers, leads and visitors data and help personalize
    customers experiences while also offering features to respect visitor
    privacy rules (such as GDPR).
baseUrl: https://github.com/Jahia/paas_jelastic_unomi/raw/master
globals:
  shortdomain: ${settings.shortdomain}
  unomi_version: 1.3.3
  es_version: 5.6.3
  package_type: dev
  dx_version: ${settings.dxVersion}
ssl: true
skipNodeEmails: true

# --Events --
onInstall:
  - script: |
      return {"result": 0, "output": "${settings.unomidns}".split('.', 1)};
  - setGlobals:
      unomi_env_name: ${response.output}
  - environment.control.ApplyNodeGroupData [proc, cp]:
      data:
        envLink: ${globals.unomi_env_name}
  - allowIP
  - updateDX: proc
  - updateDX: cp


onAfterServiceScaleOut[unomi]:
  forEach(event.response.nodes):
    - setupDatadogAgentPerNodeUnomi: ${@i.id}

onBeforeServiceScaleOut[unomi]: updateHazelcast
onBeforeScaleIn[unomi]: updateHazelcast


# -- Actions --
actions:
  updateDX:
    - cmd[${this}]: |-
        sed -i "s/#operatingMode/operatingMode/" $STACK_PATH/conf/digital-factory-config/jahia/jahia.properties
        wget -O /data/digital-factory-data/karaf/etc/org.jahia.modules.marketingfactory.settings-mf.cfg ${baseUrl}/common/org.jahia.modules.marketingfactory.settings-mf.cfg
        sed -i 's!\(mf.unomiURL= http://\).*!\1${settings.unomidns}!' /data/digital-factory-data/karaf/etc/org.jahia.modules.marketingfactory.settings-mf.cfg
        chown tomcat:tomcat /data/digital-factory-data/karaf/etc/org.jahia.modules.marketingfactory.settings-mf.cfg
        wget -O /data/digital-factory-data/modules/marketing-factory-core-${settings.mfversion}.jar https://store.jahia.com/cms/mavenproxy/private-app-store/org/jahia/modules/marketing-factory-core/${settings.mfversion}/marketing-factory-core-${settings.mfversion}.jar
        chown tomcat:tomcat /data/digital-factory-data/modules/marketing-factory-core-${settings.mfversion}.jar

  allowIP:
    - script: |
        var resp = jelastic.env.control.GetEnvInfo('${env.envName}', session);
        if (resp.result != 0) return resp;
        var ipadd = [];
        for (var i = 0, n = resp.nodes; i < n.length; i++) {
          var dockername = n[i].customitem.dockerName.split('/')[1];
          if (dockername == 'processing' || dockername == 'browsing') {
            ipadd.push(n[i].address);
          };
          //ipadd.push(dockername);
        };
        return {"result": 0,
          "out": ipadd.toString()
        };
    - setGlobals:
        ipadd_to_allow: ${response.out}
    - log: "## these ip addresses should be allowed for unomi: ${globals.ipadd_to_allow}"
    - script: |
        var resp = jelastic.env.control.AddContainerEnvVars('${globals.unomi_env_name}',
          session,
          nodeGroup='cp',
          vars={'UNOMI_THIRDPARTY_PROVIDER1_IPADDRESSES': '${globals.ipadd_to_allow}'}
        );
        if (resp.result != 0) return resp;
        return {"result": 0}
    - log: "## 'UNOMI_THIRDPARTY_PROVIDER1_IPADDRESSES=${globals.ipadd_to_allow}' set in unomi nodes"
    - script: |
        var resp = jelastic.env.control.RestartNodes('${globals.unomi_env_name}',
          session,
          nodeGroup='cp'
        );
        if (resp.result != 0) return resp;
        return {"result": 0}
    - log: "## unomi nodes get order to restart"

# -- Settings --
settings:
  fields:
    - name: unomidns
      type: string
      caption: Unomi DNS to use
      required: true
    - name: mfversion
      type: list
      caption: MF module version
      values:
        value1: 1.10.0
        value2: 1.10.1
        value3: 1.10.2
      default: 1.10.2
      editable: true
